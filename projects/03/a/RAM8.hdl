// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(in = load, sel = address, a = ma, b = mb, c = mc, d = md, e = me, f = mf, g = mg, h = mh);
    Register(in = in, load = ma, out = maa);
    Register(in = in, load = mb, out = mbb);
    Register(in = in, load = mc, out = mcc);
    Register(in = in, load = md, out = mdd);
    Register(in = in, load = me, out = mee);
    Register(in = in, load = mf, out = mff);
    Register(in = in, load = mg, out = mgg);
    Register(in = in, load = mh, out = mhh);
    Mux8Way16(a = maa, b = mbb, c = mcc, d = mdd, e = mee, f = mff, g = mgg, h = mhh, sel = address, out = out);
}